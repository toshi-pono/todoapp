openapi: 3.0.0
info:
  title: todoApp
  description: todoApp Sample for study
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Local server
paths:
  /tasks:
    get:
      summary: タスクを取得
      description: タスクを取得します
      security:
        - cookieAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        400:
          description: Bad Request
        401:
          description: Unauthorized
      operationId: getTasks
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/keyword'
      tags:
        - tasks
    post:
      summary: タスクを作成
      description: タスクを作成します
      security:
        - cookieAuth: []
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Bad Request
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
        required: true
      tags:
        - tasks
  /tasks/{taskId}:
    get:
      summary: タスクを取得
      description: タスクを1件取得します
      security:
        - cookieAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Bad Request
      operationId: getTask
      parameters:
        - $ref: '#/components/parameters/taskId'
      tags:
        - tasks
    patch:
      summary: タスクを更新
      description: タスクを更新します
      security:
        - cookieAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Bad Request
        403:
          description: Forbidden
      operationId: updateTask
      parameters:
        - $ref: '#/components/parameters/taskId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
        required: true
      tags:
        - tasks
    delete:
      summary: タスクを削除
      description: タスクを削除します
      security:
        - cookieAuth: []
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
        403:
          description: Forbidden
      operationId: deleteTask
      parameters:
        - $ref: '#/components/parameters/taskId'
      tags:
        - tasks
  /users/me:
    get:
      summary: ログインユーザーを取得
      description: ログインユーザーを取得します
      security:
        - cookieAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
      operationId: getMe
      tags:
        - users
    patch:
      summary: ログインユーザーを更新
      description: ログインユーザーを更新します
      security:
        - cookieAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
        401:
          description: Unauthorized
      operationId: updateMe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      tags:
        - users
  /users/password:
    patch:
      summary: パスワードを更新
      description: パスワードを更新します
      security:
        - cookieAuth: []
      responses:
        200:
          description: OK
        400:
          description: Bad Request
        401:
          description: Unauthorized
      operationId: updatePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      tags:
        - users
  /users:
    post:
      summary: ユーザーを作成
      description: ユーザーを作成します
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      tags:
        - users
  /login:
    post:
      summary: ログイン
      description: ログインします
      responses:
        204:
          description: No Content ログインしました
          headers:
            Set-Cookie:
              schema:
                type: string
              description: cookie
        400:
          description: Bad Request
        401:
          description: Unauthorized 認証情報が間違っています
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      tags:
        - auth
  /logout:
    post:
      summary: ログアウト
      description: ログアウトします
      security:
        - cookieAuth: []
      responses:
        204:
          description: No Content ログアウトしました
        400:
          description: Bad Request
      operationId: logout
      tags:
        - auth
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session
      description: Loginに使用するCookie
  schemas:
    Task:
      title: Task
      type: object
      properties:
        id:
          type: string
          description: タスクUUID
          format: uuid
          x-go-type: uuid.UUID
        title:
          type: string
          description: タスク名
        description:
          type: string
          description: タスク説明
        done:
          type: boolean
          description: 完了フラグ
        createdAt:
          type: string
          description: 作成日時
          format: date-time
      required:
        - id
        - title
        - description
        - done
        - createdAt
    CreateTaskRequest:
      title: CreateTaskRequest
      type: object
      properties:
        title:
          type: string
          description: タスク名
        description:
          type: string
          description: タスク説明
      required:
        - title
        - description
    UpdateTaskRequest:
      title: UpdateTaskRequest
      type: object
      properties:
        title:
          type: string
          description: タスク名
        description:
          type: string
          description: タスク説明
        done:
          type: boolean
          description: 完了フラグ
      required:
        - title
        - description
        - done
    User:
      title: User
      type: object
      properties:
        id:
          type: string
          description: ユーザーUUID
          format: uuid
          x-go-type: uuid.UUID
        name:
          type: string
          pattern: '^[a-zA-Z0-9_-]{1,32}$'
          description: ユーザー名
      required:
        - id
        - name
        - createdAt
    UpdateUserRequest:
      title: UpdateUserRequest
      type: object
      properties:
        name:
          type: string
          pattern: '^[a-zA-Z0-9_-]{1,32}$'
          description: ユーザー名
      required:
        - name
    UpdatePasswordRequest:
      title: UpdatePasswordRequest
      type: object
      properties:
        password:
          type: string
          description: パスワード
        newPassword:
          type: string
          description: 新しいパスワード
      required:
        - password
        - newPassword
    CreateUserRequest:
      title: CreateUserRequest
      type: object
      properties:
        name:
          type: string
          pattern: '^[a-zA-Z0-9_-]{1,32}$'
          description: ユーザー名
        password:
          type: string
          description: パスワード
      required:
        - name
        - password
    LoginRequest:
      title: LoginRequest
      type: object
      properties:
        name:
          type: string
          pattern: '^[a-zA-Z0-9_-]{1,32}$'
          description: ユーザー名
        password:
          type: string
          description: パスワード
      required:
        - name
        - password
  parameters:
    taskId:
      name: taskId
      in: path
      description: タスクUUID
      required: true
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
    limit:
      name: limit
      in: query
      description: 取得件数
      required: false
      schema:
        type: integer
        format: int32
        default: 10
    offset:
      name: offset
      in: query
      description: 取得開始位置
      required: false
      schema:
        type: integer
        format: int32
        default: 0
    keyword:
      name: keyword
      in: query
      description: 検索キーワード
      required: false
      schema:
        type: string

tags:
  - name: tasks
    description: タスク
  - name: users
    description: ユーザー
  - name: auth
    description: 認証

